JDBC프로그래밍 절차
 
1.드라이버 로딩 : Class.forName()
 - Oracle Driver 를 Java에서 사용하기 위해
   드라이버를  JVM에 로딩하는 과정

2. 커넥션 할당받기 : DriverManager.getConnection()
 -- DB와의 연결 

3. 쿼리문 전송을 위한 Statement 또는 PreparedStatment 할당 받기
  - conn.createStatment()  또는 conn.preparedStatement()

4. Statement 또는 PreparedStatement 를 통한 쿼리문 전송

	○ DML(insert, update, delete 등)문인 경우
	  : int updateCount = stmt.executeUpdate(sql);
	     → 영향받은 레코드 수(적용된 행의 갯수) 반환

	○ select문 인경우
	   : ReaultSet rs = stmt.executeQuery(sql);
	     → 결과 집합의 형태로 ReaultSet 반환 

5. (select 구문의 경우)
	ResultSet 의 논리적 커서 바인딩을 통해
	각 컬럼의 데이터를 바인딩 해 온다.

	boolean b = rs.next();
	→ 커서 이동.
	   커서가 위치한 지점에 레코드가 존재하면 true 반환, 없으면 false 반환.
	   커서는 가장 선두 첫 번째 레코드 직전에 위치하고 있다가
	   『next()』 메소드가 호출되면 진행한다.

6. 사용을 마친 리소스 반납
    rs.close();		→ ResultSet 을 사용했을 경우
    stmt.close(); 	→ Statement 을 사용했을 경우
    dbConn.close();
    (null 체크하여 close() 해 주는 것을 권장.
     finally 블럭에서 구현하는 것을 권장.)




static 으로 선언해서 필요할때마다 만드는것이 아니라 만들어 두기 위해서